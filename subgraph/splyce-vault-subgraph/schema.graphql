type Token @entity {
  "Token mint account"
  id: ID!
  "Number of decimals for this Token"
  decimals: Int!
  "Name of the Token"
  name: String!
  "Symbol of the Token"
  symbol: String!
}

type Vault @entity {
  "Vault address"
  id: ID!
  "Token this Vault will accrue"
  token: Token!
  "The maximum amount of tokens that can be deposited in this Vault"
  depositLimit: BigInt!
  "Is vault in shutdown"
  shutdown: Boolean!
  "Total amount of assets that has been deposited in strategies."
  totalDebt: BigInt!
  "Current assets held in the vault contract. Replacing balanceOf(this) to avoid price_per_share manipulation."
  totalIdle: BigInt!
  "Total Share."
  totalShare: BigInt!
  "Annual Percentage Rate."
  apr: BigDecimal!
  "Strategies for this Vault"
  strategies: [Strategy!]! @derivedFrom(field: "vault")
    "Token deposits into the Vault"
  deposits: [Deposit!]! @derivedFrom(field: "vault")
  # "Strategy Ids for this vault"
  # strategyIds: [Strategy!]!

}

enum StrategyType {
  Simple
  TradeFinTech
}

type Strategy @entity {
  "Strategy address"
  id: ID!
  "The Vault"
  vault: Vault
  "Strategy type"
  strategyType: StrategyType!
  "Token this Strategy will accrue"
  totalIdle: BigInt!
  "Total amount of assets that has been deposited in strategies."
  totalFund: BigInt!
  "The maximum amount of tokens that can be deposited in this Vault"
  depositLimit: BigInt!
  "Deposit period ends"
  depositPeriodEnds: BigInt!
  "Lock period ends"
  lockPeriodEnds: BigInt!
  # "Vaults that this strategy is active"
  # activeOnVaults: [Vault!] @derivedFrom(field: "strategies")

}

type Deposit @entity {
  "Transaction-Log"
  id: ID!
  "Timestamp of update"
  timestamp: BigInt!
  "Block number of update"
  blockNumber: BigInt!
  "Account making Deposit"
  account: Account!
  "Vault deposited into"
  vault: Vault!
  "Number of Tokens deposited into Vault"
  tokenAmount: BigInt!
  "Number of new Vault Shares minted"
  sharesMinted: BigInt!
  # "Ethereum Transaction"
  # transaction: Transaction!
  # "Vault Update"
  # vaultUpdate: VaultUpdate!
}

type Account @entity {
  "Account address"
  id: ID!
  "Vault deposits"
  deposits: [Deposit!]! @derivedFrom(field: "account")
  # "Vault withdrawals"
  # withdrawals: [Withdrawal!]! @derivedFrom(field: "account")
  # "Vault positions"
  # vaultPositions: [AccountVaultPosition!]! @derivedFrom(field: "account")
  # "Incoming share transfers"
  # sharesReceived: [Transfer!]! @derivedFrom(field: "to")
  # "Outgoing share transfers"
  # sharesSent: [Transfer!]! @derivedFrom(field: "from")
}
