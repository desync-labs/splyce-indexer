// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class VaultWithdrawlEvent {
  static encode(message: VaultWithdrawlEvent, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.vaultIndex);

    writer.uint32(16);
    writer.uint64(message.totalIdle);

    writer.uint32(24);
    writer.uint64(message.totalShare);

    writer.uint32(32);
    writer.uint64(message.assetsToTransfer);

    writer.uint32(40);
    writer.uint64(message.sharesToBurn);

    writer.uint32(50);
    writer.string(message.tokenAccount);

    writer.uint32(58);
    writer.string(message.shareAccount);

    writer.uint32(66);
    writer.string(message.authority);
  }

  static decode(reader: Reader, length: i32): VaultWithdrawlEvent {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new VaultWithdrawlEvent();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.vaultIndex = reader.string();
          break;

        case 2:
          message.totalIdle = reader.uint64();
          break;

        case 3:
          message.totalShare = reader.uint64();
          break;

        case 4:
          message.assetsToTransfer = reader.uint64();
          break;

        case 5:
          message.sharesToBurn = reader.uint64();
          break;

        case 6:
          message.tokenAccount = reader.string();
          break;

        case 7:
          message.shareAccount = reader.string();
          break;

        case 8:
          message.authority = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  vaultIndex: string;
  totalIdle: u64;
  totalShare: u64;
  assetsToTransfer: u64;
  sharesToBurn: u64;
  tokenAccount: string;
  shareAccount: string;
  authority: string;

  constructor(
    vaultIndex: string = "",
    totalIdle: u64 = 0,
    totalShare: u64 = 0,
    assetsToTransfer: u64 = 0,
    sharesToBurn: u64 = 0,
    tokenAccount: string = "",
    shareAccount: string = "",
    authority: string = ""
  ) {
    this.vaultIndex = vaultIndex;
    this.totalIdle = totalIdle;
    this.totalShare = totalShare;
    this.assetsToTransfer = assetsToTransfer;
    this.sharesToBurn = sharesToBurn;
    this.tokenAccount = tokenAccount;
    this.shareAccount = shareAccount;
    this.authority = authority;
  }
}
